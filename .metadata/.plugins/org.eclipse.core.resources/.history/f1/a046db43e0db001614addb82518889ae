/*
 * vitual.cpp
 *
 *  Created on: 2017Äê1ÔÂ16ÈÕ
 *      Author: LYL
 */
#include <iostream>
using namespace std;

class Shape
{
public:
	void move();
	virtual void render(){ cout << "Shape::render()" << endl; };
	virtual ~Shape(){};
private:
	int center;
};

class Rectangle:public Shape
{
public:
	virtual void render(){ cout << "Rectangle::render()" << endl; };
};

class Ellipse:public Shape
{
public:
	//Ellipse(float maj, float minr);
	virtual void render(){ cout << "Ellipse::render()" << endl; };
	virtual ~Ellipse(){};
};

class Circle:public Ellipse
{
public:
	Circle(float radiums){};
	virtual void render(){ cout << "Circle::render()" << endl; };
};

void render(Shape* p)
{
	p->render();
}

int main()
{
	Ellipse ell;
	ell.render();
	Circle circ(13);
	circ.render();

	render(&ell);
	render(&circ);

	return 0;
}


